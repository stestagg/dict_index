{
  "time": 1594633336.0420969,
  "platform": {
    "memory": {
      "total": 267325267968,
      "available": 264943534080
    },
    "release": "5.7.2-1-ec2",
    "system": "Linux",
    "processor": "Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz",
    "python_compiler": "GCC 10.1.1 20200609",
    "python_build": [
      "tags/v3.9.0a6-781-g8182cc2e68-dirty:8182cc2e68",
      "Jul 13 2020 09:32:44"
    ],
    "python_implementation": "CPython",
    "python_revision": "8182cc2e68"
  },
  "tests": {
    "GetFirstKey": {
      "name": "Get first key",
      "num_runs": 3,
      "methods": {
        "use_list": "    @Test.method\n    def use_list(self):\n        \"\"\"\n        Calling list on the dict\n        \"\"\"\n        return list(self.values)[0]\n",
        "use_iter": "    @Test.method\n    def use_iter(self):\n        \"\"\"\n        Calling iter on the keys\n        \"\"\"\n        return next(iter(self.values.keys()))\n",
        "proposed": "    @Test.method\n    def proposed(self):\n        \"\"\"\n        Using keys indexing\n        \"\"\"\n        return self.values.keys()[0]\n"
      },
      "variants": [
        100000000,
        1,
        10000000,
        100000,
        1000000000,
        1000
      ]
    },
    "GetFirstItem": {
      "name": "Get first item",
      "num_runs": 3,
      "methods": {
        "use_list": "    @Test.method\n    def use_list(self):\n        \"\"\"\n        Calling list on the dict\n        \"\"\"\n        return list(self.values.items())[0]\n",
        "use_iter": "    @Test.method\n    def use_iter(self):\n        \"\"\"\n        Calling iter on the view\n        \"\"\"\n        return next(iter(self.values.items()))\n",
        "proposed": "    @Test.method\n    def proposed(self):\n        \"\"\"\n        Using view indexing\n        \"\"\"\n        return self.values.items()[0]\n"
      },
      "variants": [
        100000000,
        1,
        10000000,
        100000,
        1000000000,
        1000
      ]
    },
    "GetLastKey": {
      "name": "Get last key",
      "num_runs": 3,
      "methods": {
        "use_list": "    @Test.method\n    def use_list(self):\n        return list(self.values)[-1]\n",
        "use_iter": "    @Test.method\n    def use_iter(self):\n        return next(reversed(self.values.keys()))\n",
        "proposed": "    @Test.method\n    def proposed(self):\n        return self.values.keys()[-1]\n"
      },
      "variants": [
        100000000,
        1,
        10000000,
        100000,
        1000000000,
        1000
      ]
    },
    "IterKeys": {
      "name": "Iterate over all keys",
      "num_runs": 3,
      "methods": {
        "list_index": "    @Test.method\n    def list_index(self):\n        \"\"\" This is a bad way of doing this \"\"\"\n        keys = list(self.values.keys())\n        for i in range(len(keys)):\n            last_key = keys[i]\n        return last_key\n",
        "list_iter": "    @Test.method\n    def list_iter(self):\n        \"\"\" This is a bad way of doing this \"\"\"\n        keys = list(self.values.keys())\n        for key in keys:\n            last_key = key\n        return last_key\n",
        "direct_iter": "    @Test.method\n    def direct_iter(self):\n        for key in self.values.keys():\n            last_key = key\n        return last_key\n",
        "keys_index": "    @Test.method\n    def keys_index(self):\n        \"\"\"\n        Using keys indexing. This approach is *not* recommended,\n        but included here to assess the performance of sitations\n        where this may be done in 'error'.\n        \"\"\"\n        keys = self.values.keys()\n        for i in range(len(keys)):\n            last_key = keys[i]\n        return last_key\n",
        "iter_keys": "    @Test.method\n    def iter_keys(self):\n        \"\"\"\n        Using the sensible iter()\n        \"\"\"\n        for key in iter(self.values.keys()):\n            last_key = key\n        return last_key\n"
      },
      "variants": [
        100000000,
        1,
        10000000,
        100000,
        1000000000,
        1000
      ]
    },
    "IterItems": {
      "name": "Iterate over all items",
      "num_runs": 3,
      "methods": {
        "list_index": "    @Test.method\n    def list_index(self):\n        \"\"\" This is a bad way of doing this \"\"\"\n        items = list(self.values.items())\n        for i in range(len(items)):\n            last_item = items[i]\n        return last_item\n",
        "list_iter": "    @Test.method\n    def list_iter(self):\n        \"\"\" This is a bad way of doing this \"\"\"\n        items = list(self.values.items())\n        for item in items:\n            last_item = item\n        return last_item\n",
        "direct_iter": "    @Test.method\n    def direct_iter(self):\n        for item in self.values.items():\n            last_item = item\n        return last_item\n",
        "items_index": "    @Test.method\n    def items_index(self):\n        \"\"\"\n        Using items indexing. This approach is *not* recommended,\n        but included here to assess the performance of sitations\n        where this may be done in 'error'.\n        \"\"\"\n        items = self.values.items()\n        for i in range(len(items)):\n            last_item = items[i]\n        return last_item\n",
        "iter_items": "    @Test.method\n    def iter_items(self):\n        \"\"\"\n        Using the sensible iter()\n        \"\"\"\n        for item in iter(self.values.items()):\n            last_item = item\n        return last_item\n"
      },
      "variants": [
        100000000,
        1,
        10000000,
        100000,
        1000000000,
        1000
      ]
    },
    "RandomSample": {
      "name": "Retrieve random sample of items from dict",
      "num_runs": 3,
      "methods": {
        "use_list": "    @Test.method\n    def use_list(self):\n        return random.sample(list(self.values.items()), self.sample_size)\n",
        "proposed": "    @Test.method\n    def proposed(self):\n        return random.sample(self.values.items(), self.sample_size)\n"
      },
      "variants": [
        100000000,
        1,
        10000000,
        100000,
        1000000000,
        1000
      ]
    },
    "RandomChoice": {
      "name": "Retrieve random item from dict",
      "num_runs": 3,
      "methods": {
        "use_list": "    @Test.method\n    def use_list(self):\n        return random.choice(list(self.values.items()))\n",
        "proposed": "    @Test.method\n    def proposed(self):\n        return random.choice(self.values.items())\n"
      },
      "variants": [
        100000000,
        1,
        10000000,
        100000,
        1000000000,
        1000
      ]
    }
  },
  "results": {
    "GetFirstItem": {
      "use_iter": {
        "100000": [
          0.0043170000481040915,
          0.008306999916385394,
          0.005775000317953527
        ],
        "1000000000": [
          0.006099000074755168,
          0.007294999704754446,
          0.007325999831664376
        ],
        "10000000": [
          0.007375999985015369,
          0.007699999969190685,
          0.008590001016273163
        ],
        "1": [
          0.0030080000215093605,
          0.001856000380939804,
          0.002992997906403616
        ],
        "1000": [
          0.00282300015896908,
          0.0015890000213403255,
          0.0013509998098015785
        ],
        "100000000": [
          0.006898000719957054,
          0.0069569996412610635,
          0.006696000127703883
        ]
      },
      "use_list": {
        "10000000": [
          854.2592010001044,
          750.3394510004,
          750.5016830000386
        ],
        "100000000": [
          10846.12018100006,
          10823.986282999613,
          10797.92424399966
        ],
        "1000": [
          0.03509199996187817,
          0.03666500015242491,
          0.037551999412244186
        ],
        "1000000000": [
          108091.88279099998,
          108815.38936699872,
          108569.47112000125
        ],
        "1": [
          0.0012669997886405326,
          0.003010000000358559,
          0.0025079971237573773
        ],
        "100000": [
          7.132991000617039,
          7.16549099979602,
          7.573521001177141
        ]
      },
      "proposed": {
        "1": [
          0.0014209999790182337,
          0.0029479997465386987,
          0.00094600000011269
        ],
        "1000": [
          0.0018430000636726618,
          0.0014659999578725547,
          0.001972999598365277
        ],
        "100000": [
          0.0036430001273402013,
          0.002849999873433262,
          0.004755000190925784
        ],
        "10000000": [
          0.008123999577946961,
          0.006037998900865205,
          0.005153997335582972
        ],
        "100000000": [
          0.004966999767930247,
          0.004560999514069408,
          0.006166999810375273
        ],
        "1000000000": [
          0.005435998900793493,
          0.005759999112342484,
          0.006098001904319972
        ]
      }
    },
    "IterItems": {
      "direct_iter": {
        "100000000": [
          2561.1475850000716,
          2507.3239860003014,
          2533.478433999335
        ],
        "100000": [
          2.6663430001008237,
          2.7671959996951045,
          2.85047199940891
        ],
        "1000000000": [
          25408.27583800001,
          24596.888328000205,
          25509.17335700069
        ],
        "10000000": [
          263.2415180000862,
          257.3664900000949,
          265.07411199963826
        ],
        "1": [
          0.0016269996194751002,
          0.0023299999156733975,
          0.0026670004444895312
        ],
        "1000": [
          0.027134999982081354,
          0.02882100125134457,
          0.027484999009175226
        ]
      },
      "list_iter": {
        "10000000": [
          1209.6988690000217,
          998.7354589998176,
          1019.3403670000407
        ],
        "100000": [
          9.102164000069024,
          9.36519400056568,
          9.296500000345986
        ],
        "100000000": [
          12010.314117000235,
          11982.720918999803,
          11261.155911997776
        ],
        "1": [
          0.0036370001907926053,
          0.003727998773683794,
          0.003851000656140968
        ],
        "1000000000": [
          119507.31723799981,
          119070.16458999897,
          122002.40758899963
        ],
        "1000": [
          0.04995099880034104,
          0.04754499968839809,
          0.04719900243799202
        ]
      },
      "items_index": {
        "1": [
          0.003049999804716208,
          0.0027730002329917625,
          0.0015870027709752321
        ],
        "100000": [
          7.315240000025369,
          7.242593000228226,
          7.374404000074719
        ],
        "1000": [
          0.07155499997679726,
          0.06880900036776438,
          0.06975699943723157
        ],
        "1000000000": [
          71956.14513800046,
          69989.73956400005,
          71946.35299500078
        ],
        "100000000": [
          6981.461441999272,
          7024.5876040007715,
          7239.675548000378
        ],
        "10000000": [
          703.6950879992219,
          724.2833159998554,
          725.9525350000331
        ]
      },
      "list_index": {
        "10000000": [
          1240.190961999815,
          1243.4594970000035,
          1153.9905870013172
        ],
        "100000": [
          11.898105999989639,
          11.526996000156942,
          10.958075999951689
        ],
        "1000": [
          0.07021399960649433,
          0.06890300028317142,
          0.07058700066409074
        ],
        "1000000000": [
          142652.75099200063,
          145525.30867499992,
          145181.85098600044
        ],
        "100000000": [
          14229.391961000147,
          13840.16342599898,
          13830.93273799932
        ],
        "1": [
          0.003456001650192775,
          0.004486999387154356,
          0.002913000571425073
        ]
      },
      "iter_items": {
        "1000": [
          0.027086000045528635,
          0.02687500000320142,
          0.026235999939672183
        ],
        "10000000": [
          254.19685699989714,
          274.5887479995872,
          256.32373400003416
        ],
        "1": [
          0.0018099999579135329,
          0.0024630007828818634,
          0.0026460002118255943
        ],
        "1000000000": [
          25201.789286999883,
          24571.118179999758,
          24540.36748100043
        ],
        "100000": [
          2.7209629997742013,
          2.485114000592148,
          2.7507859995239414
        ],
        "100000000": [
          2603.0503120000503,
          2669.784456000343,
          2828.0269389979367
        ]
      }
    },
    "RandomSample": {
      "use_list": {
        "100000000": [
          10892.226823000101,
          10795.311691001189,
          10070.220345000052
        ],
        "1": [
          0.018666999949346064,
          0.006620000931434333,
          0.01665299896558281
        ],
        "100000": [
          8.465036999950826,
          8.948319999035448,
          9.92978599970229
        ],
        "1000": [
          0.47431399980268907,
          0.4581559996950091,
          0.47258300037356094
        ],
        "10000000": [
          835.5079849998219,
          775.209432000338,
          798.0632140024682
        ],
        "1000000000": [
          106208.55603899964,
          106605.36886200044,
          108613.37046699919
        ]
      },
      "proposed": {
        "1": [
          0.030901000172889326,
          0.03406699943298008,
          0.030640001568826847
        ],
        "1000": [
          0.4871779997301928,
          0.4789080003320123,
          0.47769699995114934
        ],
        "100000000": [
          11177.54363199947,
          11295.08948900002,
          11101.777428000787
        ],
        "1000000000": [
          111202.98396599991,
          113925.42530699939,
          111858.27087299913
        ],
        "100000": [
          9.115259000282094,
          9.182687999782502,
          9.358094001072459
        ],
        "10000000": [
          816.7599169992172,
          815.4091219985276,
          821.8726350005454
        ]
      }
    },
    "GetFirstKey": {
      "use_iter": {
        "1000": [
          0.003153999841742916,
          0.0026800007617566735,
          0.0032890002330532297
        ],
        "100000000": [
          0.0061830000959162135,
          0.005416000021796208,
          0.00624799940851517
        ],
        "1": [
          0.0024870000743248966,
          0.0020900006347801536,
          0.0026099987735506147
        ],
        "1000000000": [
          0.006361000032484299,
          0.0069090001488802955,
          0.007010999979684129
        ],
        "100000": [
          0.0037339996197260916,
          0.006800999472034164,
          0.0044600001274375245
        ],
        "10000000": [
          0.0074760009738383815,
          0.008117000106722116,
          0.00744900171412155
        ]
      },
      "proposed": {
        "1000000000": [
          0.005418999990070006,
          0.004706999789050315,
          0.0066230004449607804
        ],
        "1": [
          0.002463999862811761,
          0.0004379999154480174,
          0.0021250007193884812
        ],
        "1000": [
          0.0021099999685247894,
          0.0014090001059230417,
          0.00043199906940571964
        ],
        "100000": [
          0.0030330002118716948,
          0.003360000846441835,
          0.0031069994292920455
        ],
        "10000000": [
          0.006399999620043673,
          0.006287998985499144,
          0.005843998224008828
        ],
        "100000000": [
          0.00642400118522346,
          0.0041050006984733045,
          0.004482000804273412
        ]
      },
      "use_list": {
        "1000": [
          0.009837000106927007,
          0.00898100006452296,
          0.008959001206676476
        ],
        "100000": [
          1.1749459999919054,
          1.2517390005086781,
          1.429148000170244
        ],
        "1": [
          0.002380000296398066,
          0.0031070003387867473,
          0.002754000888671726
        ],
        "1000000000": [
          18231.037534999814,
          18137.232478000442,
          18046.949776000474
        ],
        "100000000": [
          1814.2527059999338,
          1871.7063139993115,
          1901.2427369998477
        ],
        "10000000": [
          192.89099300112866,
          197.96219099953305,
          202.84536899998784
        ]
      }
    },
    "RandomChoice": {
      "use_list": {
        "1": [
          0.007859999868742307,
          0.007577000360470265,
          0.006416999895009212
        ],
        "100000000": [
          10808.891737000067,
          10174.609303998295,
          10182.213374999264
        ],
        "1000000000": [
          108737.88832499986,
          106920.43435699998,
          109653.64034099912
        ],
        "1000": [
          0.03571299976101727,
          0.038004999623808544,
          0.04226199962431565
        ],
        "100000": [
          7.665393000024778,
          6.826720000390196,
          6.854044999272446
        ],
        "10000000": [
          750.4962870007148,
          773.6931990002631,
          779.3666949983162
        ]
      },
      "proposed": {
        "1000": [
          0.007841999831725843,
          0.006966999535507057,
          0.007912000000942498
        ],
        "100000": [
          0.00818699982119142,
          0.009028999556903727,
          0.007745999027974904
        ],
        "100000000": [
          0.010838999969564611,
          0.00962899957812624,
          0.009483001122134738
        ],
        "1000000000": [
          0.009396000223205192,
          0.009433999366592616,
          0.008490998880006373
        ],
        "1": [
          0.006758999916200992,
          0.007299000571947545,
          0.004259999514033552
        ],
        "10000000": [
          0.010417999874334782,
          0.00995499976852443,
          0.010306999683962204
        ]
      }
    },
    "GetLastKey": {
      "use_iter": {
        "1000": [
          0.0039870001273811795,
          0.003773999196710065,
          0.0037099998735357076
        ],
        "1": [
          0.0033390001590305474,
          0.00394000016967766,
          0.004720000106317457
        ],
        "10000000": [
          0.008787999831838533,
          0.010048000149254221,
          0.00829599957796745
        ],
        "100000000": [
          0.008543000149074942,
          0.008343000445165671,
          0.007279999408638105
        ],
        "100000": [
          0.007028000254649669,
          0.007441998604917899,
          0.005093999789096415
        ],
        "1000000000": [
          0.007681999704800546,
          0.00839300082589034,
          0.008849001460475847
        ]
      },
      "use_list": {
        "1000000000": [
          18219.74239700012,
          18165.12019699985,
          18177.375978999407
        ],
        "100000000": [
          1804.530526000235,
          1870.431355000619,
          1889.0128589991946
        ],
        "10000000": [
          188.692658999571,
          184.3967699996938,
          194.58899599885626
        ],
        "1000": [
          0.00927500059333397,
          0.01079499998013489,
          0.011393000022508204
        ],
        "1": [
          0.0015010000424808823,
          0.002696000592550263,
          0.0034000004234258085
        ],
        "100000": [
          0.9353869991173269,
          1.2694899996859021,
          1.2843190015701111
        ]
      },
      "proposed": {
        "1": [
          0.002427999788778834,
          0.002314000084879808,
          0.0022020012693246827
        ],
        "100000": [
          0.0034739996408461593,
          0.0032260004445561208,
          0.004966999767930247
        ],
        "100000000": [
          0.0047789999371161684,
          0.004905999958282337,
          0.004695999450632371
        ],
        "1000000000": [
          0.004889000592811499,
          0.005142999725649133,
          0.004753999746753834
        ],
        "1000": [
          0.0010399999155197293,
          0.0011280008038738742,
          0.002217000655946322
        ],
        "10000000": [
          0.0056680000852793455,
          0.005845999112352729,
          0.005564999810303561
        ]
      }
    },
    "IterKeys": {
      "direct_iter": {
        "1000": [
          0.01573899999129935,
          0.014737999663338996,
          0.016156000128830783
        ],
        "1": [
          0.0011349998203513678,
          0.0021910000214120373,
          0.002172000677092001
        ],
        "1000000000": [
          15313.39967699978,
          15332.158543999867,
          15518.459476999851
        ],
        "10000000": [
          157.74159700049495,
          167.8244459999405,
          167.7065340008994
        ],
        "100000": [
          1.7891389998112572,
          1.604904000487295,
          1.8759159993351204
        ],
        "100000000": [
          1635.5119039999408,
          1636.6170330002205,
          1646.9721560006292
        ]
      },
      "list_iter": {
        "1000": [
          0.02032399993368017,
          0.020568999389070086,
          0.020861999473709147
        ],
        "1000000000": [
          30477.809656999852,
          30062.33411500034,
          30533.809812999607
        ],
        "100000": [
          2.1966740000607388,
          2.1313710003596498,
          2.4667180005053524
        ],
        "10000000": [
          324.2644809997728,
          320.6217379993177,
          338.40473699819995
        ],
        "100000000": [
          3039.362701000755,
          3039.283873000386,
          3082.959974000005
        ],
        "1": [
          0.001368000084767118,
          0.0032950010790955275,
          0.004438999894773588
        ]
      },
      "iter_keys": {
        "100000": [
          1.7839329998423636,
          1.8063389998133061,
          1.7712809999466117
        ],
        "10000000": [
          153.72334499988938,
          165.95558900007745,
          161.94311799972638
        ],
        "1": [
          0.0018689997887122445,
          0.002620999566715909,
          0.0018439995983499102
        ],
        "1000": [
          0.016513999980816152,
          0.01664000046730507,
          0.015346999134635553
        ],
        "1000000000": [
          15116.068925000036,
          15152.557609000723,
          15367.332379999425
        ],
        "100000000": [
          1613.8703960004932,
          1581.723838000471,
          1659.8779939995438
        ]
      },
      "list_index": {
        "1000": [
          0.045820000195817556,
          0.04603999877872411,
          0.046811999709461816
        ],
        "1000000000": [
          54884.76803899994,
          55047.25482399954,
          56047.17007600084
        ],
        "100000000": [
          5534.165609999945,
          5548.559666000074,
          5743.220997999742
        ],
        "10000000": [
          561.2707480004246,
          560.1169319998007,
          552.489845999844
        ],
        "100000": [
          4.780374999427295,
          4.50180799998634,
          4.8962529999698745
        ],
        "1": [
          0.0031789995773578994,
          0.004134999471716583,
          0.0029040020308457315
        ]
      },
      "keys_index": {
        "10000000": [
          400.79977899995356,
          414.22507999959635,
          410.88869899977
        ],
        "1000000000": [
          40832.127892000244,
          40383.118619000015,
          40759.455685998546
        ],
        "1": [
          0.0028479998945840634,
          0.0028779995773220435,
          0.0027529986255103722
        ],
        "1000": [
          0.03796500004682457,
          0.0395499992009718,
          0.038484999095089734
        ],
        "100000": [
          4.232499999488937,
          4.210249000607291,
          4.1928520004148595
        ],
        "100000000": [
          4119.007413999498,
          4080.81040900106,
          4089.992502000314
        ]
      }
    }
  }
}
